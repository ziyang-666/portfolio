{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portfolio\\\\Portfolio\\\\src\\\\theme\\\\mode.js\",\n  _s = $RefreshSig$();\nimport \"./mode.css\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { themeActions } from \"../store/theme\";\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ContrastIcon from '@mui/icons-material/Contrast';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icons = [/*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(ContrastIcon, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this)];\nconst Mode = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isVisible, setIsVisible] = useState(false);\n  const [iconIndex, setIcon] = useState(0);\n  let mode = 'light';\n  function fetchSystemMode() {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      mode = 'dark';\n    } else {\n      mode = 'light';\n    }\n  }\n  useEffect(() => {\n    fetchSystemMode();\n    if (mode === 'dark') {\n      handleModeChange(1);\n    }\n  }, [mode]);\n  function handleModeChange(index) {\n    if (index === 0) {\n      mode = \"light\";\n    } else if (index === 1) {\n      mode = \"dark\";\n    } else {\n      fetchSystemMode();\n    }\n    setIcon(index);\n    const listItems = document.getElementsByClassName(\"modeItem\");\n    for (let i = 0; i < 3; i++) {\n      listItems[i].classList.remove(\"activeMode\");\n    }\n    listItems[index].classList.add(\"activeMode\");\n    dispatch(themeActions.setMode(mode));\n    setIsVisible(false);\n  }\n  function handleDropdown() {\n    setIsVisible(!isVisible);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown\",\n      style: {\n        display: isVisible ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"modeItem\",\n        onClick: e => handleModeChange(0),\n        children: [/*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), \"Light\", /*#__PURE__*/_jsxDEV(DoneIcon, {\n          style: {\n            color: iconIndex === 0 ? \"inherit\" : \"transparent\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"modeItem\",\n        onClick: e => handleModeChange(1),\n        children: [/*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), \"Dark\", /*#__PURE__*/_jsxDEV(DoneIcon, {\n          style: {\n            color: iconIndex === 1 ? \"inherit\" : \"transparent\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"modeItem\",\n        onClick: e => handleModeChange(2),\n        children: [/*#__PURE__*/_jsxDEV(ContrastIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), \"Auto\", /*#__PURE__*/_jsxDEV(DoneIcon, {\n          style: {\n            color: iconIndex === 2 ? \"inherit\" : \"transparent\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modeBtn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDropdown,\n        children: [icons[iconIndex], /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Mode, \"bfH9oTblzzmwSwWEtuGQKI3LS4w=\", false, function () {\n  return [useDispatch];\n});\n_c = Mode;\nexport default Mode;\nvar _c;\n$RefreshReg$(_c, \"Mode\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","themeActions","ArrowDropUpIcon","DoneIcon","ContrastIcon","DarkModeIcon","LightModeIcon","icons","Mode","dispatch","isVisible","setIsVisible","iconIndex","setIcon","mode","fetchSystemMode","window","matchMedia","matches","handleModeChange","index","listItems","document","getElementsByClassName","i","classList","remove","add","setMode","handleDropdown","display","e","color"],"sources":["D:/Portfolio/Portfolio/src/theme/mode.js"],"sourcesContent":["import \"./mode.css\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { themeActions } from \"../store/theme\";\r\n\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nimport ContrastIcon from '@mui/icons-material/Contrast';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\nconst icons=[\r\n    <LightModeIcon />,\r\n    <DarkModeIcon />,\r\n    <ContrastIcon />\r\n];\r\n\r\nconst Mode=()=>{\r\n\r\n    const dispatch=useDispatch();\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [iconIndex,setIcon]=useState(0);\r\n\r\n    let mode='light';\r\n    function fetchSystemMode() {\r\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n            mode='dark';\r\n        }else{\r\n            mode='light';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchSystemMode();\r\n        if (mode==='dark') {\r\n            handleModeChange(1);\r\n        }\r\n    }, [mode]);\r\n\r\n    function handleModeChange(index) {\r\n        if(index===0){\r\n            mode=\"light\";\r\n        }else if(index===1){\r\n            mode=\"dark\";\r\n        }else{\r\n            fetchSystemMode();\r\n        }\r\n        setIcon(index);\r\n        const listItems=document.getElementsByClassName(\"modeItem\");\r\n        for(let i=0;i<3;i++){\r\n            listItems[i].classList.remove(\"activeMode\");\r\n        }\r\n        listItems[index].classList.add(\"activeMode\");\r\n\r\n        dispatch(themeActions.setMode(mode));\r\n        setIsVisible(false);\r\n    }\r\n    function handleDropdown() {\r\n        setIsVisible(!isVisible);\r\n    }\r\n    return(\r\n        <div className=\"theme\">\r\n                <ul className=\"dropdown\" style={{display:isVisible?\"block\":\"none\"}}>\r\n                    <li className=\"modeItem\" onClick={(e)=>handleModeChange(0)}>\r\n                        <LightModeIcon />\r\n                        Light\r\n                        <DoneIcon style={{color:iconIndex===0?\"inherit\":\"transparent\"}}/>\r\n                    </li>\r\n                    <li className=\"modeItem\" onClick={(e)=>handleModeChange(1)}>\r\n                        <DarkModeIcon />\r\n                        Dark\r\n                        <DoneIcon style={{color:iconIndex===1?\"inherit\":\"transparent\"}}/>\r\n                    </li>\r\n                    <li className=\"modeItem\" onClick={(e)=>handleModeChange(2)}>\r\n                        <ContrastIcon />\r\n                        Auto\r\n                        <DoneIcon style={{color:iconIndex===2?\"inherit\":\"transparent\"}}/>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"modeBtn\">\r\n                <button onClick={handleDropdown}>\r\n                    {icons[iconIndex]}\r\n                    <ArrowDropUpIcon/>\r\n                </button>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nexport default Mode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}