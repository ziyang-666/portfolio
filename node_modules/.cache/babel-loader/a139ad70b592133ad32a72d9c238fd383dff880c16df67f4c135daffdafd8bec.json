{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialThemeState = {\n  mode: 'light',\n  uiColor: 'purple',\n  theme: {\n    color: 'rgb(0, 31, 63)',\n    backgroundColor: \"rgb(237, 249, 254)\"\n  },\n  nonThemeColor: 'black'\n};\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState: initialThemeState,\n  reducers: {\n    changeThemeColor(state, action) {\n      state.theme.color = action.payload;\n    },\n    setMode(state, action) {\n      console.log(action.payload);\n      if (action.payload === 'dark') {\n        state.mode = 'dark';\n        state.theme.color = 'cyan';\n        state.theme.backgroundColor = 'rgb(0, 31, 63)';\n        state.nonThemeColor = 'white';\n      } else {\n        state.mode = 'light';\n        state.theme = initialThemeState.theme;\n        state.nonThemeColor = 'black';\n      }\n    }\n  }\n});\nconst store = configureStore({\n  reducer: themeSlice.reducer\n});\nexport const themeActions = themeSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialThemeState","mode","uiColor","theme","color","backgroundColor","nonThemeColor","themeSlice","name","initialState","reducers","changeThemeColor","state","action","payload","setMode","console","log","store","reducer","themeActions","actions"],"sources":["D:/Portfolio/Portfolio/src/store/theme.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialThemeState={\r\n    mode:'light',\r\n    uiColor:'purple',\r\n    theme:{\r\n        color:'rgb(0, 31, 63)',\r\n        backgroundColor:\"rgb(237, 249, 254)\",\r\n    },\r\n    nonThemeColor:'black'\r\n};\r\n\r\nconst themeSlice=createSlice({\r\n    name:'theme',\r\n    initialState:initialThemeState,\r\n    reducers:{\r\n        changeThemeColor(state,action){\r\n            state.theme.color=action.payload;\r\n        },\r\n        setMode(state,action){\r\n            console.log(action.payload);\r\n            if(action.payload==='dark'){\r\n                state.mode='dark';\r\n                state.theme.color='cyan';\r\n                state.theme.backgroundColor='rgb(0, 31, 63)';\r\n                state.nonThemeColor='white';\r\n            }\r\n            else{\r\n                state.mode='light';\r\n                state.theme=initialThemeState.theme;\r\n                state.nonThemeColor='black';\r\n            }\r\n        }\r\n    }\r\n});\r\nconst store=configureStore({\r\n    reducer:themeSlice.reducer\r\n});\r\n\r\nexport const themeActions=themeSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,iBAAiB,GAAC;EACpBC,IAAI,EAAC,OAAO;EACZC,OAAO,EAAC,QAAQ;EAChBC,KAAK,EAAC;IACFC,KAAK,EAAC,gBAAgB;IACtBC,eAAe,EAAC;EACpB,CAAC;EACDC,aAAa,EAAC;AAClB,CAAC;AAED,MAAMC,UAAU,GAACR,WAAW,CAAC;EACzBS,IAAI,EAAC,OAAO;EACZC,YAAY,EAACT,iBAAiB;EAC9BU,QAAQ,EAAC;IACLC,gBAAgB,CAACC,KAAK,EAACC,MAAM,EAAC;MAC1BD,KAAK,CAACT,KAAK,CAACC,KAAK,GAACS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,OAAO,CAACH,KAAK,EAACC,MAAM,EAAC;MACjBG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACC,OAAO,CAAC;MAC3B,IAAGD,MAAM,CAACC,OAAO,KAAG,MAAM,EAAC;QACvBF,KAAK,CAACX,IAAI,GAAC,MAAM;QACjBW,KAAK,CAACT,KAAK,CAACC,KAAK,GAAC,MAAM;QACxBQ,KAAK,CAACT,KAAK,CAACE,eAAe,GAAC,gBAAgB;QAC5CO,KAAK,CAACN,aAAa,GAAC,OAAO;MAC/B,CAAC,MACG;QACAM,KAAK,CAACX,IAAI,GAAC,OAAO;QAClBW,KAAK,CAACT,KAAK,GAACH,iBAAiB,CAACG,KAAK;QACnCS,KAAK,CAACN,aAAa,GAAC,OAAO;MAC/B;IACJ;EACJ;AACJ,CAAC,CAAC;AACF,MAAMY,KAAK,GAACpB,cAAc,CAAC;EACvBqB,OAAO,EAACZ,UAAU,CAACY;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAACb,UAAU,CAACc,OAAO;AAC5C,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}