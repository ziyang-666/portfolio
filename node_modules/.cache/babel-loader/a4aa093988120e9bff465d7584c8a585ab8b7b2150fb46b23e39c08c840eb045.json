{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portfolio\\\\Portfolio\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport './navbar.css';\nimport { themeActions } from \"../../store/theme\";\nimport ColorModal from \"./ColorModal\";\nimport Routes from \"./Routes\";\nimport PersonalData from \"../../Data/PersonalData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const menuRef = useRef();\n  const dispatch = useDispatch();\n  const nonThemeColor = useSelector(state => state.nonThemeColor);\n  const changeColor = newColor => {\n    dispatch(themeActions.changeThemeColor(newColor));\n  };\n  const mode = useSelector(state => state.mode);\n  useEffect(() => {\n    if (mode === \"dark\") {\n      const lightModeBtn = document.getElementById(\"lightModeBtn\");\n      const darkModeBtn = document.getElementById(\"darkModeBtn\");\n      lightModeBtn.style.display = \"none\";\n      darkModeBtn.style.display = \"block\";\n      darkModeBtn.style.color = \"black\";\n    }\n  }, [mode]);\n  const bgColor = useSelector(state => state.theme.backgroundColor);\n  const activeColor = useSelector(state => state.theme.color);\n\n  // const [mode, setMode] = useState(\"light\");\n  const [isDropDownVisible, setIsDropDownVisible] = useState(false);\n  const [isColorModalShown, setColorModalShown] = useState(false);\n  function handleModeChange() {\n    const lightModeBtn = document.getElementById(\"lightModeBtn\");\n    const darkModeBtn = document.getElementById(\"darkModeBtn\");\n    if (mode === 'light') {\n      lightModeBtn.style.display = \"none\";\n      darkModeBtn.style.display = \"block\";\n      darkModeBtn.style.color = \"black\";\n      dispatch(themeActions.setMode(\"dark\"));\n    } else {\n      lightModeBtn.style.display = \"block\";\n      darkModeBtn.style.display = \"none\";\n      lightModeBtn.style.color = \"white\";\n      dispatch(themeActions.setMode(\"light\"));\n    }\n  }\n  function handleColorSelector() {\n    setColorModalShown(prev => !prev);\n  }\n  function handleDropDown() {\n    setIsDropDownVisible(prevValue => {\n      return !prevValue;\n    });\n  }\n  function handleNavigate() {\n    handleDropDown();\n    menuRef.current.checked = false;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: bgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"logo\",\n          children: [PersonalData.firstName, \"\\xA0\\xA0\", PersonalData.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navsContainer\",\n        style: {\n          color: nonThemeColor\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectTheme\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectMode\",\n          onClick: handleModeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"lightModeBtn\",\n            style: {\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"darkModeBtn\",\n            style: {\n              display: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colorSelector\",\n          onClick: handleColorSelector,\n          style: {\n            backgroundColor: activeColor\n          },\n          children: isColorModalShown && /*#__PURE__*/_jsxDEV(ColorModal, {\n            selectColor: changeColor,\n            onConfirm: handleColorSelector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => handleDropDown(),\n          ref: menuRef,\n          id: \"burger-toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"burger-toggle\",\n          className: \"burger-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), isDropDownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mob-nav\",\n      style: {\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        onClick: handleNavigate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"fktcaxGdQF7gkn0LqkUbOtrYNZ0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","LightModeIcon","DarkModeIcon","themeActions","ColorModal","Routes","PersonalData","Navbar","menuRef","dispatch","nonThemeColor","state","changeColor","newColor","changeThemeColor","mode","lightModeBtn","document","getElementById","darkModeBtn","style","display","color","bgColor","theme","backgroundColor","activeColor","isDropDownVisible","setIsDropDownVisible","isColorModalShown","setColorModalShown","handleModeChange","setMode","handleColorSelector","prev","handleDropDown","prevValue","handleNavigate","current","checked","firstName","lastName"],"sources":["D:/Portfolio/Portfolio/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport './navbar.css';\r\n\r\nimport { themeActions } from \"../../store/theme\";\r\n\r\nimport ColorModal from \"./ColorModal\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport PersonalData from \"../../Data/PersonalData\";\r\n\r\nconst Navbar = () => {\r\n\r\n    const menuRef = useRef();\r\n    const dispatch = useDispatch();\r\n    \r\n    const nonThemeColor = useSelector(state => state.nonThemeColor);\r\n    const changeColor = (newColor) => {\r\n        dispatch(themeActions.changeThemeColor(newColor));\r\n    }\r\n\r\n    const mode = useSelector(state => state.mode);\r\n    useEffect(()=>{\r\n        if(mode===\"dark\"){\r\n            const lightModeBtn = document.getElementById(\"lightModeBtn\")\r\n            const darkModeBtn = document.getElementById(\"darkModeBtn\")\r\n            lightModeBtn.style.display = \"none\";\r\n            darkModeBtn.style.display = \"block\";\r\n            darkModeBtn.style.color = \"black\";\r\n        }\r\n    },[mode])\r\n    const bgColor = useSelector(state => state.theme.backgroundColor);\r\n    const activeColor = useSelector(state => state.theme.color);\r\n\r\n    // const [mode, setMode] = useState(\"light\");\r\n    const [isDropDownVisible, setIsDropDownVisible] = useState(false);\r\n    const [isColorModalShown, setColorModalShown] = useState(false);\r\n\r\n\r\n    function handleModeChange() {\r\n\r\n        const lightModeBtn = document.getElementById(\"lightModeBtn\")\r\n        const darkModeBtn = document.getElementById(\"darkModeBtn\")\r\n        if (mode === 'light') {\r\n            lightModeBtn.style.display = \"none\";\r\n            darkModeBtn.style.display = \"block\";\r\n            darkModeBtn.style.color = \"black\";\r\n            dispatch(themeActions.setMode(\"dark\"));\r\n        }\r\n        else {\r\n            lightModeBtn.style.display = \"block\";\r\n            darkModeBtn.style.display = \"none\";\r\n            lightModeBtn.style.color = \"white\";\r\n            dispatch(themeActions.setMode(\"light\"));\r\n        }\r\n    }\r\n\r\n    function handleColorSelector() {\r\n        setColorModalShown(prev => !prev);\r\n    }\r\n    function handleDropDown() {\r\n        setIsDropDownVisible((prevValue)=>{\r\n            return !prevValue;\r\n        });\r\n    }\r\n    function handleNavigate(){\r\n        handleDropDown();\r\n            menuRef.current.checked = false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"navbar\" style={{ backgroundColor: bgColor }}>\r\n                <div className=\"logoContainer\">\r\n                    <div id=\"logo\">\r\n                        {PersonalData.firstName}&nbsp;&nbsp;{PersonalData.lastName}\r\n                    </div>\r\n                </div>\r\n                <div className=\"navsContainer\" style={{ color: nonThemeColor }}>\r\n                    <Routes />\r\n                </div>\r\n                <div className=\"selectTheme\">\r\n                    <div className=\"selectMode\" onClick={handleModeChange}>\r\n                        <div id=\"lightModeBtn\" style={{ color: \"white\" }}><LightModeIcon /></div>\r\n                        <div id=\"darkModeBtn\" style={{ display: \"none\" }}><DarkModeIcon /></div>\r\n                    </div>\r\n\r\n                    <div className=\"colorSelector\" onClick={handleColorSelector} style={{ backgroundColor: activeColor }}>\r\n                        {\r\n                            isColorModalShown && <ColorModal selectColor={changeColor} onConfirm={handleColorSelector} />\r\n                        }\r\n                    </div>\r\n\r\n                    <input type=\"checkbox\" onClick={()=>handleDropDown()} ref={menuRef} id=\"burger-toggle\" />\r\n                    <label htmlFor=\"burger-toggle\" className=\"burger-menu\">\r\n                        <div className=\"line\"></div>\r\n                        <div className=\"line\"></div>\r\n                        <div className=\"line\"></div>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            {isDropDownVisible && <div className=\"mob-nav\" style={{ color: 'white' }}>\r\n                <Routes onClick={handleNavigate} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}